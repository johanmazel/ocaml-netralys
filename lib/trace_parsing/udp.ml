(* This file was autogenerated by MPL *)
module Udp = struct
  open Mpl_stdlib
  exception Bad_packet of string

  class o
    ~(data_length:int)
    (env:env) =
    object(self)
      method env = env_at env 0 self#sizeof
      method sizeof = data_length+2+2+2+2
      method source_port =
        Mpl_uint16.to_int (Mpl_uint16.at env (0))
      method set_source_port v : unit =
        Mpl_uint16.marshal (env_at env (0) 2) (Mpl_uint16.of_int v)

      method dest_port =
        Mpl_uint16.to_int (Mpl_uint16.at env (2))
      method set_dest_port v : unit =
        Mpl_uint16.marshal (env_at env (2) 2) (Mpl_uint16.of_int v)


      method checksum =
        Mpl_uint16.to_int (Mpl_uint16.at env (2+2+2))
      method set_checksum v : unit =
        Mpl_uint16.marshal (env_at env (2+2+2) 2) (Mpl_uint16.of_int v)

      method data =
        Mpl_raw.at env (2+2+2+2) data_length
      (* set_data unsupported for now (type byte array) *)
      method data_env : env = env_at env (2+2+2+2) data_length
      method data_frag = Mpl_raw.frag env (2+2+2+2) data_length
      method data_length = data_length

      method total_length = 2+2+2+2+data_length


      method prettyprint =
        let out = prerr_endline in
        out "[ Udp.udp ]";
        out ("  source_port = " ^ (Printf.sprintf "%u" self#source_port));
        out ("  dest_port = " ^ (Printf.sprintf "%u" self#dest_port));
        (* length : bound *)
        out ("  checksum = " ^ (Printf.sprintf "%u" self#checksum));
        out ("  data = " ^ (Mpl_raw.prettyprint self#data));
        (* total_length : bound *)
        ()
    end

  let t
    ~source_port
    ~dest_port
    ?(checksum=0)
    ~(data:data)
    env =
      (* let checksum___offset = 2+2+2+2 in *)
      let ___env = env_at env (2+2+2+2) 0 in
      let data___len = match data with 
      |`Str x -> Mpl_raw.marshal ___env x; String.length x
      |`Sub fn -> fn ___env; curpos ___env
      |`None -> 0
      |`Frag t -> Mpl_raw.blit ___env t; curpos ___env in
      let total_length___offset = 2+2+2+2+data___len in
      let length = (Mpl_uint16.of_int total_length___offset) in (* bound *)
      let source_port = (Mpl_uint16.of_int source_port) in
      let dest_port = (Mpl_uint16.of_int dest_port) in
      let checksum = (Mpl_uint16.of_int checksum) in
      (* let data = data in *)
      Mpl_uint16.marshal env source_port;
      Mpl_uint16.marshal env dest_port;
      Mpl_uint16.marshal env length;
      Mpl_uint16.marshal env checksum;
      skip env data___len;
      new o
      ~data_length:data___len
      env

  let m (x:(env->o)) env = x env
  let sizeof (x:o) = x#sizeof
  let prettyprint (x:o) = x#prettyprint
  let env (x:o) = x#env

  let unmarshal 
    (env:env) : o =
    skip env 2; (* skipped source_port *)
    skip env 2; (* skipped dest_port *)
    let length = Mpl_uint16.unmarshal env in
    skip env 2; (* skipped checksum *)
    let checksum___offset = curpos env in
    let data_length = ((Mpl_uint16.to_int length) - checksum___offset) in
    skip env data_length; (* skipped data *)
    skip env 0; (* skipped total_length *)
    (* let total_length___offset = curpos env in *)
    new o env
    ~data_length:data_length
end

